<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wwinter.mapper.XSchemaFlattenedKeysMapper">
  <resultMap id="BaseResultMap" type="cn.wwinter.model.XSchemaFlattenedKeys">
    <result column="table_schema" jdbcType="VARCHAR" property="tableSchema" />
    <result column="table_name" jdbcType="VARCHAR" property="tableName" />
    <result column="index_name" jdbcType="VARCHAR" property="indexName" />
    <result column="non_unique" jdbcType="INTEGER" property="nonUnique" />
    <result column="subpart_exists" jdbcType="BIGINT" property="subpartExists" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.wwinter.model.XSchemaFlattenedKeys">
    <result column="index_columns" jdbcType="LONGVARCHAR" property="indexColumns" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    table_schema, table_name, index_name, non_unique, subpart_exists
  </sql>
  <sql id="Blob_Column_List">
    index_columns
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.wwinter.model.XSchemaFlattenedKeysExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from x$schema_flattened_keys
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.wwinter.model.XSchemaFlattenedKeysExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from x$schema_flattened_keys
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.wwinter.model.XSchemaFlattenedKeysExample">
    delete from x$schema_flattened_keys
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wwinter.model.XSchemaFlattenedKeys">
    insert into x$schema_flattened_keys (table_schema, table_name, index_name, 
      non_unique, subpart_exists, index_columns
      )
    values (#{tableSchema,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR}, #{indexName,jdbcType=VARCHAR}, 
      #{nonUnique,jdbcType=INTEGER}, #{subpartExists,jdbcType=BIGINT}, #{indexColumns,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.wwinter.model.XSchemaFlattenedKeys">
    insert into x$schema_flattened_keys
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tableSchema != null">
        table_schema,
      </if>
      <if test="tableName != null">
        table_name,
      </if>
      <if test="indexName != null">
        index_name,
      </if>
      <if test="nonUnique != null">
        non_unique,
      </if>
      <if test="subpartExists != null">
        subpart_exists,
      </if>
      <if test="indexColumns != null">
        index_columns,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tableSchema != null">
        #{tableSchema,jdbcType=VARCHAR},
      </if>
      <if test="tableName != null">
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="indexName != null">
        #{indexName,jdbcType=VARCHAR},
      </if>
      <if test="nonUnique != null">
        #{nonUnique,jdbcType=INTEGER},
      </if>
      <if test="subpartExists != null">
        #{subpartExists,jdbcType=BIGINT},
      </if>
      <if test="indexColumns != null">
        #{indexColumns,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wwinter.model.XSchemaFlattenedKeysExample" resultType="java.lang.Integer">
    select count(*) from x$schema_flattened_keys
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update x$schema_flattened_keys
    <set>
      <if test="record.tableSchema != null">
        table_schema = #{record.tableSchema,jdbcType=VARCHAR},
      </if>
      <if test="record.tableName != null">
        table_name = #{record.tableName,jdbcType=VARCHAR},
      </if>
      <if test="record.indexName != null">
        index_name = #{record.indexName,jdbcType=VARCHAR},
      </if>
      <if test="record.nonUnique != null">
        non_unique = #{record.nonUnique,jdbcType=INTEGER},
      </if>
      <if test="record.subpartExists != null">
        subpart_exists = #{record.subpartExists,jdbcType=BIGINT},
      </if>
      <if test="record.indexColumns != null">
        index_columns = #{record.indexColumns,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update x$schema_flattened_keys
    set table_schema = #{record.tableSchema,jdbcType=VARCHAR},
      table_name = #{record.tableName,jdbcType=VARCHAR},
      index_name = #{record.indexName,jdbcType=VARCHAR},
      non_unique = #{record.nonUnique,jdbcType=INTEGER},
      subpart_exists = #{record.subpartExists,jdbcType=BIGINT},
      index_columns = #{record.indexColumns,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update x$schema_flattened_keys
    set table_schema = #{record.tableSchema,jdbcType=VARCHAR},
      table_name = #{record.tableName,jdbcType=VARCHAR},
      index_name = #{record.indexName,jdbcType=VARCHAR},
      non_unique = #{record.nonUnique,jdbcType=INTEGER},
      subpart_exists = #{record.subpartExists,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>