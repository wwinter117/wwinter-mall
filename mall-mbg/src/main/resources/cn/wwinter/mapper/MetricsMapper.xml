<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wwinter.mapper.MetricsMapper">
  <resultMap id="BaseResultMap" type="cn.wwinter.model.Metrics">
    <result column="Variable_name" jdbcType="VARCHAR" property="variableName" />
    <result column="Type" jdbcType="VARCHAR" property="type" />
    <result column="Enabled" jdbcType="VARCHAR" property="enabled" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.wwinter.model.Metrics">
    <result column="Variable_value" jdbcType="LONGVARCHAR" property="variableValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Variable_name, Type, Enabled
  </sql>
  <sql id="Blob_Column_List">
    Variable_value
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.wwinter.model.MetricsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from metrics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.wwinter.model.MetricsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from metrics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.wwinter.model.MetricsExample">
    delete from metrics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wwinter.model.Metrics">
    insert into metrics (Variable_name, Type, Enabled, 
      Variable_value)
    values (#{variableName,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{enabled,jdbcType=VARCHAR}, 
      #{variableValue,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.wwinter.model.Metrics">
    insert into metrics
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="variableName != null">
        Variable_name,
      </if>
      <if test="type != null">
        Type,
      </if>
      <if test="enabled != null">
        Enabled,
      </if>
      <if test="variableValue != null">
        Variable_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="variableName != null">
        #{variableName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=VARCHAR},
      </if>
      <if test="variableValue != null">
        #{variableValue,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wwinter.model.MetricsExample" resultType="java.lang.Integer">
    select count(*) from metrics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update metrics
    <set>
      <if test="record.variableName != null">
        Variable_name = #{record.variableName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        Type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null">
        Enabled = #{record.enabled,jdbcType=VARCHAR},
      </if>
      <if test="record.variableValue != null">
        Variable_value = #{record.variableValue,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update metrics
    set Variable_name = #{record.variableName,jdbcType=VARCHAR},
      Type = #{record.type,jdbcType=VARCHAR},
      Enabled = #{record.enabled,jdbcType=VARCHAR},
      Variable_value = #{record.variableValue,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update metrics
    set Variable_name = #{record.variableName,jdbcType=VARCHAR},
      Type = #{record.type,jdbcType=VARCHAR},
      Enabled = #{record.enabled,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>