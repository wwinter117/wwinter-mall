<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wwinter.mapper.HostSummaryMapper">
  <resultMap id="BaseResultMap" type="cn.wwinter.model.HostSummary">
    <result column="host" jdbcType="VARCHAR" property="host" />
    <result column="statements" jdbcType="DECIMAL" property="statements" />
    <result column="statement_latency" jdbcType="VARCHAR" property="statementLatency" />
    <result column="statement_avg_latency" jdbcType="VARCHAR" property="statementAvgLatency" />
    <result column="table_scans" jdbcType="DECIMAL" property="tableScans" />
    <result column="file_ios" jdbcType="DECIMAL" property="fileIos" />
    <result column="file_io_latency" jdbcType="VARCHAR" property="fileIoLatency" />
    <result column="current_connections" jdbcType="DECIMAL" property="currentConnections" />
    <result column="total_connections" jdbcType="DECIMAL" property="totalConnections" />
    <result column="unique_users" jdbcType="BIGINT" property="uniqueUsers" />
    <result column="current_memory" jdbcType="VARCHAR" property="currentMemory" />
    <result column="total_memory_allocated" jdbcType="VARCHAR" property="totalMemoryAllocated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    host, statements, statement_latency, statement_avg_latency, table_scans, file_ios, 
    file_io_latency, current_connections, total_connections, unique_users, current_memory, 
    total_memory_allocated
  </sql>
  <select id="selectByExample" parameterType="cn.wwinter.model.HostSummaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from host_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.wwinter.model.HostSummaryExample">
    delete from host_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wwinter.model.HostSummary">
    insert into host_summary (host, statements, statement_latency, 
      statement_avg_latency, table_scans, file_ios, 
      file_io_latency, current_connections, total_connections, 
      unique_users, current_memory, total_memory_allocated
      )
    values (#{host,jdbcType=VARCHAR}, #{statements,jdbcType=DECIMAL}, #{statementLatency,jdbcType=VARCHAR}, 
      #{statementAvgLatency,jdbcType=VARCHAR}, #{tableScans,jdbcType=DECIMAL}, #{fileIos,jdbcType=DECIMAL}, 
      #{fileIoLatency,jdbcType=VARCHAR}, #{currentConnections,jdbcType=DECIMAL}, #{totalConnections,jdbcType=DECIMAL}, 
      #{uniqueUsers,jdbcType=BIGINT}, #{currentMemory,jdbcType=VARCHAR}, #{totalMemoryAllocated,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.wwinter.model.HostSummary">
    insert into host_summary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="host != null">
        host,
      </if>
      <if test="statements != null">
        statements,
      </if>
      <if test="statementLatency != null">
        statement_latency,
      </if>
      <if test="statementAvgLatency != null">
        statement_avg_latency,
      </if>
      <if test="tableScans != null">
        table_scans,
      </if>
      <if test="fileIos != null">
        file_ios,
      </if>
      <if test="fileIoLatency != null">
        file_io_latency,
      </if>
      <if test="currentConnections != null">
        current_connections,
      </if>
      <if test="totalConnections != null">
        total_connections,
      </if>
      <if test="uniqueUsers != null">
        unique_users,
      </if>
      <if test="currentMemory != null">
        current_memory,
      </if>
      <if test="totalMemoryAllocated != null">
        total_memory_allocated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="host != null">
        #{host,jdbcType=VARCHAR},
      </if>
      <if test="statements != null">
        #{statements,jdbcType=DECIMAL},
      </if>
      <if test="statementLatency != null">
        #{statementLatency,jdbcType=VARCHAR},
      </if>
      <if test="statementAvgLatency != null">
        #{statementAvgLatency,jdbcType=VARCHAR},
      </if>
      <if test="tableScans != null">
        #{tableScans,jdbcType=DECIMAL},
      </if>
      <if test="fileIos != null">
        #{fileIos,jdbcType=DECIMAL},
      </if>
      <if test="fileIoLatency != null">
        #{fileIoLatency,jdbcType=VARCHAR},
      </if>
      <if test="currentConnections != null">
        #{currentConnections,jdbcType=DECIMAL},
      </if>
      <if test="totalConnections != null">
        #{totalConnections,jdbcType=DECIMAL},
      </if>
      <if test="uniqueUsers != null">
        #{uniqueUsers,jdbcType=BIGINT},
      </if>
      <if test="currentMemory != null">
        #{currentMemory,jdbcType=VARCHAR},
      </if>
      <if test="totalMemoryAllocated != null">
        #{totalMemoryAllocated,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wwinter.model.HostSummaryExample" resultType="java.lang.Integer">
    select count(*) from host_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update host_summary
    <set>
      <if test="record.host != null">
        host = #{record.host,jdbcType=VARCHAR},
      </if>
      <if test="record.statements != null">
        statements = #{record.statements,jdbcType=DECIMAL},
      </if>
      <if test="record.statementLatency != null">
        statement_latency = #{record.statementLatency,jdbcType=VARCHAR},
      </if>
      <if test="record.statementAvgLatency != null">
        statement_avg_latency = #{record.statementAvgLatency,jdbcType=VARCHAR},
      </if>
      <if test="record.tableScans != null">
        table_scans = #{record.tableScans,jdbcType=DECIMAL},
      </if>
      <if test="record.fileIos != null">
        file_ios = #{record.fileIos,jdbcType=DECIMAL},
      </if>
      <if test="record.fileIoLatency != null">
        file_io_latency = #{record.fileIoLatency,jdbcType=VARCHAR},
      </if>
      <if test="record.currentConnections != null">
        current_connections = #{record.currentConnections,jdbcType=DECIMAL},
      </if>
      <if test="record.totalConnections != null">
        total_connections = #{record.totalConnections,jdbcType=DECIMAL},
      </if>
      <if test="record.uniqueUsers != null">
        unique_users = #{record.uniqueUsers,jdbcType=BIGINT},
      </if>
      <if test="record.currentMemory != null">
        current_memory = #{record.currentMemory,jdbcType=VARCHAR},
      </if>
      <if test="record.totalMemoryAllocated != null">
        total_memory_allocated = #{record.totalMemoryAllocated,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update host_summary
    set host = #{record.host,jdbcType=VARCHAR},
      statements = #{record.statements,jdbcType=DECIMAL},
      statement_latency = #{record.statementLatency,jdbcType=VARCHAR},
      statement_avg_latency = #{record.statementAvgLatency,jdbcType=VARCHAR},
      table_scans = #{record.tableScans,jdbcType=DECIMAL},
      file_ios = #{record.fileIos,jdbcType=DECIMAL},
      file_io_latency = #{record.fileIoLatency,jdbcType=VARCHAR},
      current_connections = #{record.currentConnections,jdbcType=DECIMAL},
      total_connections = #{record.totalConnections,jdbcType=DECIMAL},
      unique_users = #{record.uniqueUsers,jdbcType=BIGINT},
      current_memory = #{record.currentMemory,jdbcType=VARCHAR},
      total_memory_allocated = #{record.totalMemoryAllocated,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>