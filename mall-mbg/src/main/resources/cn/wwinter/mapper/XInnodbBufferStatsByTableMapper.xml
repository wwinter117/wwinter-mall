<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wwinter.mapper.XInnodbBufferStatsByTableMapper">
  <resultMap id="BaseResultMap" type="cn.wwinter.model.XInnodbBufferStatsByTable">
    <result column="allocated" jdbcType="DECIMAL" property="allocated" />
    <result column="data" jdbcType="DECIMAL" property="data" />
    <result column="pages" jdbcType="BIGINT" property="pages" />
    <result column="pages_hashed" jdbcType="BIGINT" property="pagesHashed" />
    <result column="pages_old" jdbcType="BIGINT" property="pagesOld" />
    <result column="rows_cached" jdbcType="DECIMAL" property="rowsCached" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.wwinter.model.XInnodbBufferStatsByTable">
    <result column="object_schema" jdbcType="LONGVARCHAR" property="objectSchema" />
    <result column="object_name" jdbcType="LONGVARCHAR" property="objectName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    allocated, data, pages, pages_hashed, pages_old, rows_cached
  </sql>
  <sql id="Blob_Column_List">
    object_schema, object_name
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.wwinter.model.XInnodbBufferStatsByTableExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from x$innodb_buffer_stats_by_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.wwinter.model.XInnodbBufferStatsByTableExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from x$innodb_buffer_stats_by_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.wwinter.model.XInnodbBufferStatsByTableExample">
    delete from x$innodb_buffer_stats_by_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wwinter.model.XInnodbBufferStatsByTable">
    insert into x$innodb_buffer_stats_by_table (allocated, data, pages, 
      pages_hashed, pages_old, rows_cached, 
      object_schema, object_name)
    values (#{allocated,jdbcType=DECIMAL}, #{data,jdbcType=DECIMAL}, #{pages,jdbcType=BIGINT}, 
      #{pagesHashed,jdbcType=BIGINT}, #{pagesOld,jdbcType=BIGINT}, #{rowsCached,jdbcType=DECIMAL}, 
      #{objectSchema,jdbcType=LONGVARCHAR}, #{objectName,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.wwinter.model.XInnodbBufferStatsByTable">
    insert into x$innodb_buffer_stats_by_table
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="allocated != null">
        allocated,
      </if>
      <if test="data != null">
        data,
      </if>
      <if test="pages != null">
        pages,
      </if>
      <if test="pagesHashed != null">
        pages_hashed,
      </if>
      <if test="pagesOld != null">
        pages_old,
      </if>
      <if test="rowsCached != null">
        rows_cached,
      </if>
      <if test="objectSchema != null">
        object_schema,
      </if>
      <if test="objectName != null">
        object_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="allocated != null">
        #{allocated,jdbcType=DECIMAL},
      </if>
      <if test="data != null">
        #{data,jdbcType=DECIMAL},
      </if>
      <if test="pages != null">
        #{pages,jdbcType=BIGINT},
      </if>
      <if test="pagesHashed != null">
        #{pagesHashed,jdbcType=BIGINT},
      </if>
      <if test="pagesOld != null">
        #{pagesOld,jdbcType=BIGINT},
      </if>
      <if test="rowsCached != null">
        #{rowsCached,jdbcType=DECIMAL},
      </if>
      <if test="objectSchema != null">
        #{objectSchema,jdbcType=LONGVARCHAR},
      </if>
      <if test="objectName != null">
        #{objectName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wwinter.model.XInnodbBufferStatsByTableExample" resultType="java.lang.Integer">
    select count(*) from x$innodb_buffer_stats_by_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update x$innodb_buffer_stats_by_table
    <set>
      <if test="record.allocated != null">
        allocated = #{record.allocated,jdbcType=DECIMAL},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=DECIMAL},
      </if>
      <if test="record.pages != null">
        pages = #{record.pages,jdbcType=BIGINT},
      </if>
      <if test="record.pagesHashed != null">
        pages_hashed = #{record.pagesHashed,jdbcType=BIGINT},
      </if>
      <if test="record.pagesOld != null">
        pages_old = #{record.pagesOld,jdbcType=BIGINT},
      </if>
      <if test="record.rowsCached != null">
        rows_cached = #{record.rowsCached,jdbcType=DECIMAL},
      </if>
      <if test="record.objectSchema != null">
        object_schema = #{record.objectSchema,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.objectName != null">
        object_name = #{record.objectName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update x$innodb_buffer_stats_by_table
    set allocated = #{record.allocated,jdbcType=DECIMAL},
      data = #{record.data,jdbcType=DECIMAL},
      pages = #{record.pages,jdbcType=BIGINT},
      pages_hashed = #{record.pagesHashed,jdbcType=BIGINT},
      pages_old = #{record.pagesOld,jdbcType=BIGINT},
      rows_cached = #{record.rowsCached,jdbcType=DECIMAL},
      object_schema = #{record.objectSchema,jdbcType=LONGVARCHAR},
      object_name = #{record.objectName,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update x$innodb_buffer_stats_by_table
    set allocated = #{record.allocated,jdbcType=DECIMAL},
      data = #{record.data,jdbcType=DECIMAL},
      pages = #{record.pages,jdbcType=BIGINT},
      pages_hashed = #{record.pagesHashed,jdbcType=BIGINT},
      pages_old = #{record.pagesOld,jdbcType=BIGINT},
      rows_cached = #{record.rowsCached,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>