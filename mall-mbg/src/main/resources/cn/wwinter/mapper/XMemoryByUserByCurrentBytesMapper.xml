<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wwinter.mapper.XMemoryByUserByCurrentBytesMapper">
  <resultMap id="BaseResultMap" type="cn.wwinter.model.XMemoryByUserByCurrentBytes">
    <result column="user" jdbcType="VARCHAR" property="user" />
    <result column="current_count_used" jdbcType="DECIMAL" property="currentCountUsed" />
    <result column="current_allocated" jdbcType="DECIMAL" property="currentAllocated" />
    <result column="current_avg_alloc" jdbcType="DECIMAL" property="currentAvgAlloc" />
    <result column="current_max_alloc" jdbcType="BIGINT" property="currentMaxAlloc" />
    <result column="total_allocated" jdbcType="DECIMAL" property="totalAllocated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user, current_count_used, current_allocated, current_avg_alloc, current_max_alloc, 
    total_allocated
  </sql>
  <select id="selectByExample" parameterType="cn.wwinter.model.XMemoryByUserByCurrentBytesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from x$memory_by_user_by_current_bytes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.wwinter.model.XMemoryByUserByCurrentBytesExample">
    delete from x$memory_by_user_by_current_bytes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wwinter.model.XMemoryByUserByCurrentBytes">
    insert into x$memory_by_user_by_current_bytes (user, current_count_used, current_allocated, 
      current_avg_alloc, current_max_alloc, total_allocated
      )
    values (#{user,jdbcType=VARCHAR}, #{currentCountUsed,jdbcType=DECIMAL}, #{currentAllocated,jdbcType=DECIMAL}, 
      #{currentAvgAlloc,jdbcType=DECIMAL}, #{currentMaxAlloc,jdbcType=BIGINT}, #{totalAllocated,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.wwinter.model.XMemoryByUserByCurrentBytes">
    insert into x$memory_by_user_by_current_bytes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user != null">
        user,
      </if>
      <if test="currentCountUsed != null">
        current_count_used,
      </if>
      <if test="currentAllocated != null">
        current_allocated,
      </if>
      <if test="currentAvgAlloc != null">
        current_avg_alloc,
      </if>
      <if test="currentMaxAlloc != null">
        current_max_alloc,
      </if>
      <if test="totalAllocated != null">
        total_allocated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user != null">
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="currentCountUsed != null">
        #{currentCountUsed,jdbcType=DECIMAL},
      </if>
      <if test="currentAllocated != null">
        #{currentAllocated,jdbcType=DECIMAL},
      </if>
      <if test="currentAvgAlloc != null">
        #{currentAvgAlloc,jdbcType=DECIMAL},
      </if>
      <if test="currentMaxAlloc != null">
        #{currentMaxAlloc,jdbcType=BIGINT},
      </if>
      <if test="totalAllocated != null">
        #{totalAllocated,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wwinter.model.XMemoryByUserByCurrentBytesExample" resultType="java.lang.Integer">
    select count(*) from x$memory_by_user_by_current_bytes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update x$memory_by_user_by_current_bytes
    <set>
      <if test="record.user != null">
        user = #{record.user,jdbcType=VARCHAR},
      </if>
      <if test="record.currentCountUsed != null">
        current_count_used = #{record.currentCountUsed,jdbcType=DECIMAL},
      </if>
      <if test="record.currentAllocated != null">
        current_allocated = #{record.currentAllocated,jdbcType=DECIMAL},
      </if>
      <if test="record.currentAvgAlloc != null">
        current_avg_alloc = #{record.currentAvgAlloc,jdbcType=DECIMAL},
      </if>
      <if test="record.currentMaxAlloc != null">
        current_max_alloc = #{record.currentMaxAlloc,jdbcType=BIGINT},
      </if>
      <if test="record.totalAllocated != null">
        total_allocated = #{record.totalAllocated,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update x$memory_by_user_by_current_bytes
    set user = #{record.user,jdbcType=VARCHAR},
      current_count_used = #{record.currentCountUsed,jdbcType=DECIMAL},
      current_allocated = #{record.currentAllocated,jdbcType=DECIMAL},
      current_avg_alloc = #{record.currentAvgAlloc,jdbcType=DECIMAL},
      current_max_alloc = #{record.currentMaxAlloc,jdbcType=BIGINT},
      total_allocated = #{record.totalAllocated,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>