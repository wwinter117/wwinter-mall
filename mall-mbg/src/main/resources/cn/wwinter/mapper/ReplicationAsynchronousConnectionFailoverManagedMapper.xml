<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wwinter.mapper.ReplicationAsynchronousConnectionFailoverManagedMapper">
  <resultMap id="BaseResultMap" type="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManaged">
    <result column="CHANNEL_NAME" jdbcType="CHAR" property="channelName" />
    <result column="MANAGED_NAME" jdbcType="CHAR" property="managedName" />
    <result column="MANAGED_TYPE" jdbcType="CHAR" property="managedType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManaged">
    <result column="CONFIGURATION" jdbcType="LONGVARCHAR" property="configuration" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CHANNEL_NAME, MANAGED_NAME, MANAGED_TYPE
  </sql>
  <sql id="Blob_Column_List">
    CONFIGURATION
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManagedExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from replication_asynchronous_connection_failover_managed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManagedExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from replication_asynchronous_connection_failover_managed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManagedExample">
    delete from replication_asynchronous_connection_failover_managed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManaged">
    insert into replication_asynchronous_connection_failover_managed (CHANNEL_NAME, MANAGED_NAME, MANAGED_TYPE, 
      CONFIGURATION)
    values (#{channelName,jdbcType=CHAR}, #{managedName,jdbcType=CHAR}, #{managedType,jdbcType=CHAR}, 
      #{configuration,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManaged">
    insert into replication_asynchronous_connection_failover_managed
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="channelName != null">
        CHANNEL_NAME,
      </if>
      <if test="managedName != null">
        MANAGED_NAME,
      </if>
      <if test="managedType != null">
        MANAGED_TYPE,
      </if>
      <if test="configuration != null">
        CONFIGURATION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="channelName != null">
        #{channelName,jdbcType=CHAR},
      </if>
      <if test="managedName != null">
        #{managedName,jdbcType=CHAR},
      </if>
      <if test="managedType != null">
        #{managedType,jdbcType=CHAR},
      </if>
      <if test="configuration != null">
        #{configuration,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManagedExample" resultType="java.lang.Integer">
    select count(*) from replication_asynchronous_connection_failover_managed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update replication_asynchronous_connection_failover_managed
    <set>
      <if test="record.channelName != null">
        CHANNEL_NAME = #{record.channelName,jdbcType=CHAR},
      </if>
      <if test="record.managedName != null">
        MANAGED_NAME = #{record.managedName,jdbcType=CHAR},
      </if>
      <if test="record.managedType != null">
        MANAGED_TYPE = #{record.managedType,jdbcType=CHAR},
      </if>
      <if test="record.configuration != null">
        CONFIGURATION = #{record.configuration,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update replication_asynchronous_connection_failover_managed
    set CHANNEL_NAME = #{record.channelName,jdbcType=CHAR},
      MANAGED_NAME = #{record.managedName,jdbcType=CHAR},
      MANAGED_TYPE = #{record.managedType,jdbcType=CHAR},
      CONFIGURATION = #{record.configuration,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update replication_asynchronous_connection_failover_managed
    set CHANNEL_NAME = #{record.channelName,jdbcType=CHAR},
      MANAGED_NAME = #{record.managedName,jdbcType=CHAR},
      MANAGED_TYPE = #{record.managedType,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManaged">
    <id column="Channel_name" jdbcType="CHAR" property="channelName" />
    <id column="Managed_name" jdbcType="CHAR" property="managedName" />
    <result column="Managed_type" jdbcType="CHAR" property="managedType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManaged">
    <result column="Configuration" jdbcType="LONGVARCHAR" property="configuration" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Channel_name, Managed_name, Managed_type
  </sql>
  <sql id="Blob_Column_List">
    Configuration
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManagedExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from replication_asynchronous_connection_failover_managed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManagedExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from replication_asynchronous_connection_failover_managed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from replication_asynchronous_connection_failover_managed
    where Channel_name = #{channelName,jdbcType=CHAR}
      and Managed_name = #{managedName,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from replication_asynchronous_connection_failover_managed
    where Channel_name = #{channelName,jdbcType=CHAR}
      and Managed_name = #{managedName,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManagedExample">
    delete from replication_asynchronous_connection_failover_managed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManaged">
    insert into replication_asynchronous_connection_failover_managed (Channel_name, Managed_name, Managed_type, 
      Configuration)
    values (#{channelName,jdbcType=CHAR}, #{managedName,jdbcType=CHAR}, #{managedType,jdbcType=CHAR}, 
      #{configuration,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManaged">
    insert into replication_asynchronous_connection_failover_managed
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="channelName != null">
        Channel_name,
      </if>
      <if test="managedName != null">
        Managed_name,
      </if>
      <if test="managedType != null">
        Managed_type,
      </if>
      <if test="configuration != null">
        Configuration,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="channelName != null">
        #{channelName,jdbcType=CHAR},
      </if>
      <if test="managedName != null">
        #{managedName,jdbcType=CHAR},
      </if>
      <if test="managedType != null">
        #{managedType,jdbcType=CHAR},
      </if>
      <if test="configuration != null">
        #{configuration,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManagedExample" resultType="java.lang.Integer">
    select count(*) from replication_asynchronous_connection_failover_managed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update replication_asynchronous_connection_failover_managed
    <set>
      <if test="record.channelName != null">
        Channel_name = #{record.channelName,jdbcType=CHAR},
      </if>
      <if test="record.managedName != null">
        Managed_name = #{record.managedName,jdbcType=CHAR},
      </if>
      <if test="record.managedType != null">
        Managed_type = #{record.managedType,jdbcType=CHAR},
      </if>
      <if test="record.configuration != null">
        Configuration = #{record.configuration,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update replication_asynchronous_connection_failover_managed
    set Channel_name = #{record.channelName,jdbcType=CHAR},
      Managed_name = #{record.managedName,jdbcType=CHAR},
      Managed_type = #{record.managedType,jdbcType=CHAR},
      Configuration = #{record.configuration,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update replication_asynchronous_connection_failover_managed
    set Channel_name = #{record.channelName,jdbcType=CHAR},
      Managed_name = #{record.managedName,jdbcType=CHAR},
      Managed_type = #{record.managedType,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManaged">
    update replication_asynchronous_connection_failover_managed
    <set>
      <if test="managedType != null">
        Managed_type = #{managedType,jdbcType=CHAR},
      </if>
      <if test="configuration != null">
        Configuration = #{configuration,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Channel_name = #{channelName,jdbcType=CHAR}
      and Managed_name = #{managedName,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManaged">
    update replication_asynchronous_connection_failover_managed
    set Managed_type = #{managedType,jdbcType=CHAR},
      Configuration = #{configuration,jdbcType=LONGVARCHAR}
    where Channel_name = #{channelName,jdbcType=CHAR}
      and Managed_name = #{managedName,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.wwinter.model.ReplicationAsynchronousConnectionFailoverManaged">
    update replication_asynchronous_connection_failover_managed
    set Managed_type = #{managedType,jdbcType=CHAR}
    where Channel_name = #{channelName,jdbcType=CHAR}
      and Managed_name = #{managedName,jdbcType=CHAR}
  </update>
</mapper>