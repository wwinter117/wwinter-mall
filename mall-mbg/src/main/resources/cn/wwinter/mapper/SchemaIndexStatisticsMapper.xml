<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wwinter.mapper.SchemaIndexStatisticsMapper">
  <resultMap id="BaseResultMap" type="cn.wwinter.model.SchemaIndexStatistics">
    <result column="table_schema" jdbcType="VARCHAR" property="tableSchema" />
    <result column="table_name" jdbcType="VARCHAR" property="tableName" />
    <result column="index_name" jdbcType="VARCHAR" property="indexName" />
    <result column="rows_selected" jdbcType="BIGINT" property="rowsSelected" />
    <result column="select_latency" jdbcType="VARCHAR" property="selectLatency" />
    <result column="rows_inserted" jdbcType="BIGINT" property="rowsInserted" />
    <result column="insert_latency" jdbcType="VARCHAR" property="insertLatency" />
    <result column="rows_updated" jdbcType="BIGINT" property="rowsUpdated" />
    <result column="update_latency" jdbcType="VARCHAR" property="updateLatency" />
    <result column="rows_deleted" jdbcType="BIGINT" property="rowsDeleted" />
    <result column="delete_latency" jdbcType="VARCHAR" property="deleteLatency" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    table_schema, table_name, index_name, rows_selected, select_latency, rows_inserted, 
    insert_latency, rows_updated, update_latency, rows_deleted, delete_latency
  </sql>
  <select id="selectByExample" parameterType="cn.wwinter.model.SchemaIndexStatisticsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schema_index_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.wwinter.model.SchemaIndexStatisticsExample">
    delete from schema_index_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wwinter.model.SchemaIndexStatistics">
    insert into schema_index_statistics (table_schema, table_name, index_name, 
      rows_selected, select_latency, rows_inserted, 
      insert_latency, rows_updated, update_latency, 
      rows_deleted, delete_latency)
    values (#{tableSchema,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR}, #{indexName,jdbcType=VARCHAR}, 
      #{rowsSelected,jdbcType=BIGINT}, #{selectLatency,jdbcType=VARCHAR}, #{rowsInserted,jdbcType=BIGINT}, 
      #{insertLatency,jdbcType=VARCHAR}, #{rowsUpdated,jdbcType=BIGINT}, #{updateLatency,jdbcType=VARCHAR}, 
      #{rowsDeleted,jdbcType=BIGINT}, #{deleteLatency,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.wwinter.model.SchemaIndexStatistics">
    insert into schema_index_statistics
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tableSchema != null">
        table_schema,
      </if>
      <if test="tableName != null">
        table_name,
      </if>
      <if test="indexName != null">
        index_name,
      </if>
      <if test="rowsSelected != null">
        rows_selected,
      </if>
      <if test="selectLatency != null">
        select_latency,
      </if>
      <if test="rowsInserted != null">
        rows_inserted,
      </if>
      <if test="insertLatency != null">
        insert_latency,
      </if>
      <if test="rowsUpdated != null">
        rows_updated,
      </if>
      <if test="updateLatency != null">
        update_latency,
      </if>
      <if test="rowsDeleted != null">
        rows_deleted,
      </if>
      <if test="deleteLatency != null">
        delete_latency,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tableSchema != null">
        #{tableSchema,jdbcType=VARCHAR},
      </if>
      <if test="tableName != null">
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="indexName != null">
        #{indexName,jdbcType=VARCHAR},
      </if>
      <if test="rowsSelected != null">
        #{rowsSelected,jdbcType=BIGINT},
      </if>
      <if test="selectLatency != null">
        #{selectLatency,jdbcType=VARCHAR},
      </if>
      <if test="rowsInserted != null">
        #{rowsInserted,jdbcType=BIGINT},
      </if>
      <if test="insertLatency != null">
        #{insertLatency,jdbcType=VARCHAR},
      </if>
      <if test="rowsUpdated != null">
        #{rowsUpdated,jdbcType=BIGINT},
      </if>
      <if test="updateLatency != null">
        #{updateLatency,jdbcType=VARCHAR},
      </if>
      <if test="rowsDeleted != null">
        #{rowsDeleted,jdbcType=BIGINT},
      </if>
      <if test="deleteLatency != null">
        #{deleteLatency,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wwinter.model.SchemaIndexStatisticsExample" resultType="java.lang.Integer">
    select count(*) from schema_index_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update schema_index_statistics
    <set>
      <if test="record.tableSchema != null">
        table_schema = #{record.tableSchema,jdbcType=VARCHAR},
      </if>
      <if test="record.tableName != null">
        table_name = #{record.tableName,jdbcType=VARCHAR},
      </if>
      <if test="record.indexName != null">
        index_name = #{record.indexName,jdbcType=VARCHAR},
      </if>
      <if test="record.rowsSelected != null">
        rows_selected = #{record.rowsSelected,jdbcType=BIGINT},
      </if>
      <if test="record.selectLatency != null">
        select_latency = #{record.selectLatency,jdbcType=VARCHAR},
      </if>
      <if test="record.rowsInserted != null">
        rows_inserted = #{record.rowsInserted,jdbcType=BIGINT},
      </if>
      <if test="record.insertLatency != null">
        insert_latency = #{record.insertLatency,jdbcType=VARCHAR},
      </if>
      <if test="record.rowsUpdated != null">
        rows_updated = #{record.rowsUpdated,jdbcType=BIGINT},
      </if>
      <if test="record.updateLatency != null">
        update_latency = #{record.updateLatency,jdbcType=VARCHAR},
      </if>
      <if test="record.rowsDeleted != null">
        rows_deleted = #{record.rowsDeleted,jdbcType=BIGINT},
      </if>
      <if test="record.deleteLatency != null">
        delete_latency = #{record.deleteLatency,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update schema_index_statistics
    set table_schema = #{record.tableSchema,jdbcType=VARCHAR},
      table_name = #{record.tableName,jdbcType=VARCHAR},
      index_name = #{record.indexName,jdbcType=VARCHAR},
      rows_selected = #{record.rowsSelected,jdbcType=BIGINT},
      select_latency = #{record.selectLatency,jdbcType=VARCHAR},
      rows_inserted = #{record.rowsInserted,jdbcType=BIGINT},
      insert_latency = #{record.insertLatency,jdbcType=VARCHAR},
      rows_updated = #{record.rowsUpdated,jdbcType=BIGINT},
      update_latency = #{record.updateLatency,jdbcType=VARCHAR},
      rows_deleted = #{record.rowsDeleted,jdbcType=BIGINT},
      delete_latency = #{record.deleteLatency,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>